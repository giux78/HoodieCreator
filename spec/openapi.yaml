openapi: 3.0.0
info:
  title: API Key Example
  version: '1.0'
servers:
  - url: https://hoodie-creator.vercel.app/openapi
paths:
  /secret:
    get:
      summary: Return secret string
      operationId: app.get_secret
      responses:
        '200':
          description: secret response
          content:
            '*/*':
              schema:
                type: string
      security:
        - api_key: []
  /product:    
    post:
      summary: Buy the product from the image above
      description: Buy the product from the image above
      operationId: app.create_product
      x-openai-isConsequential: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  link_stripe:
                    type: string
                  product_image_front:
                    type: string
                  product_image_back:
                    type: string
      requestBody:
        description: the image with name color and base64 representation
        required: true
        content:
          application/json:
            schema:
              required:
                - image_url
                - color
                - prompt
                - size
              type: object
              properties:
                image_url:
                  description: the url of the image created
                  type: string
                color:
                  description: the color of the hoodie or tshirt
                  type: string
                prompt:
                  description: the prompt used to create the image
                  type: string
                size:
                  description: the prompt used to create the image
                  type: string
      security:
        - api_key: []
  /generate_image:    
    post:
      summary: Generate an image form the prompt
      description: Buy the product from the image above
      operationId: app.create_image
      x-openai-isConsequential: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_url:
                    type: string
      requestBody:
        description: the prompt to create a new image
        required: true
        content:
          application/json:
            schema:
              required:
                - prompt
              type: object
              properties:
                prompt:
                  description: the prompt to genereate a new image
                  type: string
      security:
        - api_key: []
  /tweet_campaigns:    
    post:
      summary: Publish a tweet for me 
      description: Publish a tweet for me 
      operationId: app.tweet_campaigns
      x-openai-isConsequential: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
      requestBody:
        description: the array of tweets to publish
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  image_url:
                    type: string 
                    description: an image to attach to the tweet
                  tweet: 
                    type: string
                    description: the text to publish as tweet
      security:
        - api_key: []
  /privacy_policy:
    get:
      operationId: app.get_privacy_policy
      summary: Return the privacy policy
      description: Return the privacy policy gfor the website
      responses:
        '200':
          description: Successfully returned the provacy policy.
          content:
            text/html:
              schema:
                type: string
  /static/{filename}:
    get:
      operationId: app.get
      parameters:
        - name: filename
          in: path
          description: filename to return from static
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/plain:
              schema:
                type: string
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Auth
      in: header
      x-apikeyInfoFunc: app.apikey_auth